package Lessons29;

public class Test {
    public static void main(String[] args) {
        Animal animal = new Animal();
        Dog dog = new Dog();
        Cat cat = new Cat();

        test(animal);
        test(dog);
        test(cat);
        dog.eat();
    }
    public static void test(Animal animal){
        animal.eat();
    }
}
//С помощью полиморфизма так же можно сделать код меньше.Выстроив праильную наследственную связь.
// всё работает через 1 методом.Который обслуживает общий родитель Пример
//     test(animal);
//        test(dog);
//        test(cat);
//        dog.eat();
//    }
//    public static void test(Animal animal){
//        animal.eat();
// В итоге все смогут выполнить этот метод, и он будет легче чем через animal.eat
//Суть полиморфизма заключается в следующем.
//Если у нас ечть наследование в классе, то можно создать обьект через родительский класс Animal animal = new Dog
// Соответственно можно будет вызывать все методы прописанные в родителе для этого класса, но методы из
//класса Dog не будут доступны.
//Так-же если переопределить метод в наследуемом классе,то при активации метода в программе, будет использоваться метод
// переопределённый в наследуемом классе.